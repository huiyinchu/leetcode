/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(root==null) return;
        TreeLinkNode current=root.left;
        if(current!=null){
            current.next=root.right;
            current=root.right;
            if(root.next==null) current.next=null;
            else current.next=root.next.left;
            connect(root.left);
            connect(root.right);
        }
    }
}




public class Solution {
    public void connect(TreeLinkNode root) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(root==null) return;
        if(root.left!=null)
            root.left.next = root.right==null?getNext(root):root.right;
        if(root.right!=null)
            root.right.next = getNext(root);
        
        connect(root.left);
        connect(root.right);
    }
    public  TreeLinkNode getNext(TreeLinkNode node){
        TreeLinkNode curr = node;
        while(curr.next!=null){
            curr=curr.next;
            if(curr.left!=null)
                return curr.left;
            if(curr.right!=null)
                return curr.right; 
        }
        return null;
    }
}