public class Solution {
    public void solve(char[][] board) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(board==null||board.length==0) return;
        int row=board.length;
        int col=board[0].length;
        for(int i=0;i<row;i++){
            if(board[i][0]=='O') dfs(board,i,0);
            if(board[i][col-1]=='O') dfs(board,i,col-1);
        }
        for(int j=1;j<col-1;j++){
            if(board[0][j]=='O') dfs(board,0,j);
            if(board[row-1][j]=='O') dfs(board,row-1,j);
        }
        
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(board[i][j]=='O') board[i][j]='X';
                if(board[i][j]=='+') board[i][j]='O';
            }
        }
    }
    
    public void dfs(char[][] board,int row,int col){
        board[row][col]='+';
        if(row-1>=0&&board[row-1][col]=='O') dfs(board,row-1,col);
        if(row+1<board.length&&board[row+1][col]=='O') dfs(board,row+1,col);
        if(col-1>=0&&board[row][col-1]=='O') dfs(board,row,col-1);
        if(col+1<board[0].length&&board[row][col+1]=='O') dfs(board,row,col+1);
    }
}